name: cd

on:
  workflow_dispatch:
  #push:
  #  branches:
  #    - master
  #pull_request:
  #  branches:
  #    - master

env: 
  AWS_REGION: us-east-1
  ECR_REPOSITORY: kubernetes-github-actions
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Test
      run: |
        cd site
        npm install
        npm test

  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - run-tests

    steps:
    - name: Clone
      if: ${{ false }}
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      #if: ${{ false }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
      
    - name: Login to Amazon ECR
      if: ${{ false }}
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      if: ${{ false }}
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cd site
        docker image build \
        --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest \
        --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }} \
        .
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}

    - name: Install and configure kubectl
      run: |
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        # https://github.com/aws/aws-cli/issues/6920#issuecomment-1117981158
        VERSION=v1.23.6
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
          --progress-bar \
          --location \
          --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml
        aws eks update-kubeconfig --name ${cluster_name} --region us-east-1
    - name: Deploy
      if: ${{ false }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
        export IMAGE_TAG=${{ env.SHORT_SHA }}
        export KUBECONFIG=kubeconfig.yaml
        envsubst < k8s/kustomization.tmpl.yaml > k8s/kustomization.yaml
        #kubectl kustomize k8s | kubectl apply -f -
        kubectl get ns
        #cat k8s/kustomization.yaml
